import React, { useEffect, useState } from "react";
import { motion, type Variants } from "framer-motion";
import { getLessonsByCourseCode } from "../../api/lesson";
import CourseBanner from "../../assets/jpd113-coursebanner.svg"; // ·∫£nh banner chung
import { getLessonPartsByLesson } from "../../api/lessonPart";
import { useParams, Link, useNavigate } from "react-router-dom";
import NotificationModal from "../../components/NotificationModal"; // <-- 1. IMPORT MODAL

// ... (animation config gi·ªØ nguy√™n) ...
const customEase = [0.4, 0, 0.2, 1] as const;

const fadeInUp: Variants = {
 hidden: { opacity: 0, y: 50 },
 show: {
  opacity: 1,
  y: 0,
  transition: { duration: 1.2, ease: customEase, staggerChildren: 0.1 },
 },
};

const itemFadeIn: Variants = {
 hidden: { opacity: 0, y: 40 },
 show: { opacity: 1, y: 0, transition: { duration: 0.9, ease: customEase } },
};

// neumorphism
const neumorphicShadow = "20px 20px 60px #d4d7dc, -20px -20px 60px #ffffff";
const buttonShadow =
 "4px 4px 10px rgba(33, 147, 176, 0.4), -4px -4px 10px rgba(109, 213, 237, 0.3)";
// ...

const CourseLessonsPage: React.FC = () => {
 const { courseCode } = useParams();
 const [lessons, setLessons] = useState<any[]>([]);
 const [loading, setLoading] = useState(true);
 const navigate = useNavigate();

 // --- 2. STATE CHO MODAL ---
 const [notifMessage, setNotifMessage] = useState<string | null>(null);
  // üîπ Th√™m state "c·ªù" ƒë·ªÉ nh·ªõ h√†nh ƒë·ªông c·∫ßn l√†m (gi·ªëng unverifiedEmail trong AuthPopup)
 const [isAuthError, setIsAuthError] = useState(false);

 useEffect(() => {
  const fetchLessons = async () => {
   try {
    if (!courseCode) return;
    setLoading(true);
    const res = await getLessonsByCourseCode(courseCode);
    setLessons(res);
   } catch (err: any) { // üîπ ƒê·∫∑t ki·ªÉu 'any' ƒë·ªÉ truy c·∫≠p err.response
    if (err?.response?.data?.code === 1001) {
          // üîπ 3. S·ª¨A LOGIC CATCH
          // Ch·ªâ hi·ªÉn th·ªã th√¥ng b√°o v√† ƒë·∫∑t c·ªù, KH√îNG chuy·ªÉn trang ngay
     setNotifMessage("Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th·ª±c hi·ªán t√≠nh nƒÉng n√†y.");
     setIsAuthError(true); // ƒê·∫∑t c·ªù ƒë·ªÉ bi·∫øt c·∫ßn chuy·ªÉn trang khi ƒë√≥ng modal
    } else {
     console.error("Kh√¥ng th·ªÉ t·∫£i b√†i h·ªçc:", err);
     setNotifMessage(err.response?.data?.message || "L·ªói khi t·∫£i b√†i h·ªçc.");
          setIsAuthError(false); // ƒê·∫£m b·∫£o c·ªù ƒë∆∞·ª£c x√≥a
    }
   } finally {
    setLoading(false);
   }
  };
  fetchLessons();
    // üîπ navigate kh√¥ng ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp trong effect, 
    // n√™n ta ch·ªâ c·∫ßn ph·ª• thu·ªôc v√†o courseCode
 }, [courseCode]);

  // üîπ 4. T·∫†O H√ÄM X·ª¨ L√ù ƒê√ìNG MODAL (Gi·ªëng h·ªát logic c·ªßa AuthPopup)
  const handleNotifClose = () => {
    // L∆∞u l·∫°i tr·∫°ng th√°i c·ªù tr∆∞·ªõc khi reset
    const wasAuthError = isAuthError;

    // Reset t·∫•t c·∫£ state
    setNotifMessage(null);
    setIsAuthError(false);

    // Ki·ªÉm tra c·ªù v√† th·ª±c hi·ªán h√†nh ƒë·ªông (n·∫øu c√≥)
    if (wasAuthError) {
      navigate("/courses"); // Chuy·ªÉn trang NGAY SAU KHI ƒë√≥ng modal
    }
    // N·∫øu kh√¥ng ph·∫£i l·ªói auth, kh√¥ng l√†m g√¨ th√™m
  };

 // --- 5. C·∫¨P NH·∫¨T H√ÄM ƒê·ªÇ S·ª¨ D·ª§NG MODAL (V√† x√≥a c·ªù) ---
 const handleStartLesson = async (lessonId: number) => {
  try {
      // üîπ ƒê·∫£m b·∫£o c·ªù ƒë∆∞·ª£c x√≥a khi c√≥ h√†nh ƒë·ªông m·ªõi
      setIsAuthError(false); 
   const parts = await getLessonPartsByLesson(lessonId);
   if (parts.length > 0) {
    const firstPartId = parts[0].id;
    navigate(`/lesson/${courseCode}/${lessonId}/${firstPartId}`);
   } else {
    setNotifMessage("B√†i h·ªçc n√†y ch∆∞a c√≥ n·ªôi dung n√†o!");
   }
  } catch (err: any) { // üîπ ƒê·∫∑t ki·ªÉu 'any'
   console.error("Kh√¥ng th·ªÉ t·∫£i lesson part:", err);
      setIsAuthError(false); // üîπ X√≥a c·ªù
   setNotifMessage(err.response?.data?.message || "L·ªói khi m·ªü b√†i h·ªçc!");
  }
 };

 return (
  <div className="min-h-screen bg-[#e8ebf0] py-20">
   <motion.div
        // ... (To√†n b·ªô ph·∫ßn JSX Banner v√† L·ªô tr√¨nh gi·ªØ nguy√™n) ...
   >
        {/* ... Banner ... */}
    <motion.div variants={itemFadeIn} className="text-center space-y-6">
     <div className="shadow-2xl shadow-gray-400/30 rounded-b-[60px] overflow-hidden">
      <img
       src={CourseBanner}
       alt="Course Banner"
       className="w-full h-auto object-cover"
      />
     </div>
     <h1 className="text-5xl font-semibold text-gray-800 mt-8">
      Kh√≥a h·ªçc: {courseCode?.toUpperCase()}
     </h1>
    </motion.div>

        {/* ... L·ªô tr√¨nh ... */}
    <motion.div
     variants={itemFadeIn}
     className="space-y-12 max-w-7xl mx-auto px-10"
    >
          {/* ... */}
     <h2 className="text-4xl font-light text-gray-700 text-center tracking-tight">
      T·ªïng quan L·ªô tr√¨nh H·ªçc t·∫≠p
     </h2>
     <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {[
              /* ... c√°c item ... */
      ].map((item) => (
       <motion.div
        key={item.title}
// ...
       >
        <h3 className="font-medium text-gray-800 text-xl mb-3">{item.title}</h3>
        <p className="text-gray-500 text-base font-normal">{item.desc}</p>
       </motion.div>
      ))}
     </div>
    </motion.div>

    {/* Danh s√°ch b√†i h·ªçc */}
    <motion.div
     variants={itemFadeIn}
     className="space-y-12 max-w-7xl mx-auto px-10"
    >
     <h2 className="text-4xl font-light text-gray-700 text-center tracking-tight">
      Chi ti·∫øt C√°c B√†i h·ªçc
     </h2>

     {loading ? (
      <p className="text-center text-gray-500">ƒêang t·∫£i d·ªØ li·ªáu...</p>
     ) : lessons.length === 0 ? (
      <p className="text-center italic text-gray-500">
       Kh√¥ng c√≥ b√†i h·ªçc n√†o trong kh√≥a n√†y.
      </p>
     ) : (
      <div className="space-y-8">
              {/* üîπ 6. S·ª¨A L·∫†I TH·∫∫ LINK TH√ÄNH BUTTON */}
       {lessons.map((lesson) => (
        <motion.div
         key={lesson.id}
                  // ... (props c·ªßa motion.div gi·ªØ nguy√™n) ...
         className="bg-white rounded-[30px] shadow-2xl shadow-gray-300/50 p-8 md:p-12 flex flex-col md:flex-row justify-between items-start md:items-center"
        >
         <div className="flex flex-col">
                    {/* ... (th√¥ng tin b√†i h·ªçc gi·ªØ nguy√™n) ... */}
          <p className="text-1xl font-semibold uppercase text-cyan-600 tracking-widest mb-1 opacity-75">
        T√≥m t·∫Øt: 
           B√ÄI H·ªåC
          </p>
          <h3 className="text-4xl font-medium text-gray-900 mb-2">
           {lesson.lessonTitle || "Ch∆∞a ƒë·∫∑t ti√™u ƒë·ªÅ"}
          </h3>
          <p className="text-lg text-gray-500 max-w-2xl font-light">
           {lesson.description || "Ch∆∞a c√≥ m√¥ t·∫£ cho b√†i h·ªçc n√†y."}
          </p>
         </div>
                  
                  {/* üîπ THAY <Link> B·∫∞NG <button> ƒê·ªÇ G·ªåI handleStartLesson */}
         <button
          onClick={() => handleStartLesson(lesson.id)}
          className="inline-block px-12 py-4 bg-gradient-to-r from-[#B2EBF2] to-[#80DEEA] text-white font-medium rounded-full shadow-lg transition-all duration-300 transform text-lg tracking-wider hover:scale-105"
          style={{ boxShadow: buttonShadow }}
     _
        >
          B·∫Øt ƒë·∫ßu h·ªçc
         </button>
        </motion.div>
       ))}
      </div>
     )}
    </motion.div>

    {/* ... (CTA gi·ªØ nguy√™n) ... */}
    <motion.div
     variants={itemFadeIn}
     className="text-center space-y-6 pt-16"
    >
          {/* ... */}
    </motion.div>
   </motion.div>

   {/* --- 7. RENDER MODAL V√Ä G·ªåI H√ÄM M·ªöI --- */}
   {notifMessage && (
    <NotificationModal
     message={notifMessage}
     onClose={handleNotifClose} // üîπ S·ª≠ d·ª•ng h√†m x·ª≠ l√Ω m·ªõi
    />
   )}
  </div>
 );
};

export default CourseLessonsPage;