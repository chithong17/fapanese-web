package com.ktnl.fapanese.exception;

import lombok.Getter;
import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;

import java.text.MessageFormat;

@Getter
public enum ErrorCode {
    USER_NOT_EXISTED(1000, "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng", HttpStatus.NOT_FOUND),
    AUTHENTICATED(1001, "X√°c th·ª±c th·∫•t b·∫°i", HttpStatus.UNAUTHORIZED),
    INVALID_KEY(8888, "M√£ l·ªói ch∆∞a ƒë·∫∑t t√™n", HttpStatus.BAD_REQUEST),
    UNCATEGORIZED_EXCEPTION(9999, "ƒê√£ c√≥ l·ªói kh√¥ng x√°c ƒë·ªãnh x·∫£y ra", HttpStatus.INTERNAL_SERVER_ERROR),
    EMAIL_EXISTED(1002, "Email ƒë√£ t·ªìn t·∫°i trong h·ªá th·ªëng", HttpStatus.BAD_REQUEST),
    EMAIL_SENDER(1003, "G·ª≠i Email th·∫•t b·∫°i", HttpStatus.INTERNAL_SERVER_ERROR),
    OTP_NOT_EXISTED(1004, "OTP kh√¥ng t·ªìn t·∫°i", HttpStatus.NOT_FOUND),
    OTP_INVALID(1005, "OTP kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n", HttpStatus.BAD_REQUEST),
    USER_NOT_ISACTIVED(1006, "T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã v√¥ hi·ªáu h√≥a", HttpStatus.FORBIDDEN),
    ROLE_NOT_FOUND(1007, "Kh√¥ng t√¨m th·∫•y Role c·ªßa ng∆∞·ªùi d√πng", HttpStatus.NOT_FOUND),
    USER_NOT_VERIFY_EMAIL(1008, "T√†i kho·∫£n c·ªßa b·∫°n ch∆∞a x√°c th·ª±c Email", HttpStatus.FORBIDDEN),
    USER_NEED_ADMIN_APPROVAL(1009, "T√†i kho·∫£n c·ªßa b·∫°n ƒëang ƒë·ª£i duy·ªát", HttpStatus.FORBIDDEN),
    COURSE_NOT_FOUND(1010, "Kh√¥ng t√¨m th·∫•y kh√≥a h·ªçc", HttpStatus.NOT_FOUND),
    INVALID_COURSE_NAME(1011, "Vui l√≤ng nh·∫≠p t√™n h·ª£p l·ªá", HttpStatus.BAD_REQUEST),
    PASSWORD_INCORRECT(1012, "M·∫≠t kh·∫©u c≈© kh√¥ng ch√≠nh x√°c", HttpStatus.BAD_REQUEST),
    INVALID_INPUT(1012, "ƒê√°p √°n kh√¥ng h·ª£p l·ªá", HttpStatus.BAD_REQUEST),
    LESSON_NOT_FOUND(1013, "Kh√¥ng t√¨m th·∫•y b√†i h·ªçc", HttpStatus.NOT_FOUND),
    GRAMMAR_NOT_FOUND(1014, "Kh√¥ng t√¨m th·∫•y ng·ªØ ph√°p", HttpStatus.NOT_FOUND),
    VOCABULARY_NOT_FOUND(1014, "Kh√¥ng t√¨m th·∫•y t·ª´ v·ª±ng", HttpStatus.NOT_FOUND),
    QUESTION_NOT_FOUND(1014, "Kh√¥ng t√¨m th·∫•y c√¢u h·ªèi", HttpStatus.NOT_FOUND),
    LESSON_PART_NOT_FOUND(1014, "Kh√¥ng t√¨m th·∫•y lesson part", HttpStatus.NOT_FOUND),
    SPEAKING_NOT_FOUND(1014, "Kh√¥ng t√¨m th·∫•y Speaking", HttpStatus.NOT_FOUND),
    CLASS_NOT_FOUND(1014, "Kh√¥ng t√¨m th·∫•y Class", HttpStatus.NOT_FOUND),
    LECTURER_NOT_FOUND(1014, "Kh√¥ng t√¨m th·∫•y Lecturer", HttpStatus.NOT_FOUND),
    MATERIAL_NOT_FOUND(1016, "Kh√¥ng t√¨m th·∫•y Material", HttpStatus.NOT_FOUND),
    INVALID_CLASS_NAME(1015,"ClassName kh√¥ng h·ª£p l·ªá", HttpStatus.NOT_FOUND),
    STUDENT_NOT_FOUND(1017,"Student kh√¥ng h·ª£p l·ªá", HttpStatus.NOT_FOUND),
    SUBMISSION_NOT_FOUND(1018,"B√†i n·ªôp kh√¥ng h·ª£p l·ªá", HttpStatus.NOT_FOUND),
    CLASS_COURSE_NOT_FOUND(1018,"CLASS_COURSE kh√¥ng h·ª£p l·ªá", HttpStatus.NOT_FOUND),
    // üëâ Validation specific error codes
    FIRSTNAME_REQUIRED(2001, "First name is required", HttpStatus.BAD_REQUEST),
    LASTNAME_REQUIRED(2002, "Last name is required", HttpStatus.BAD_REQUEST),
    EMAIL_INVALID(2003, "Invalid email format", HttpStatus.BAD_REQUEST),
    PASSWORD_INVALID(2004, "Password must be at least 8 characters", HttpStatus.BAD_REQUEST),
    ROLE_REQUIRED(2005, "Role is required", HttpStatus.BAD_REQUEST),
    DOB_INVALID(2006, "Date of birth must be in the past", HttpStatus.BAD_REQUEST),
    CAMPUS_REQUIRED(2007, "Campus is required", HttpStatus.BAD_REQUEST),

    FILE_REQUIRED(3001, "File kh√¥ng ƒë∆∞·ª£c r·ªóng", HttpStatus.BAD_REQUEST),
    EXCEL_MISSING_HEADER(3002, "File Excel thi·∫øu c·ªôt {0}", HttpStatus.BAD_REQUEST),
    INVALID_COLUMN(3003, "C·ªôt {0} kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.", HttpStatus.BAD_REQUEST),
    DOB_FORMAT_INVALID(3004, "ƒê·ªãnh d·∫°ng ng√†y {0} ·ªü c·ªôt {1} kh√¥ng h·ª£p l·ªá (c·∫ßn dd/MM/yyyy ho·∫∑c yyyy-MM-dd).", HttpStatus.BAD_REQUEST),
    EXCEL_INVALID_DATA_TYPE(3005, "Ki·ªÉu d·ªØ li·ªáu ·ªü c·ªôt {0} kh√¥ng h·ª£p l·ªá.", HttpStatus.BAD_REQUEST),
    EXCEL_READ_ERROR(3006, "L·ªói khi ƒë·ªçc ng√†y th√°ng ·ªü c·ªôt {0}", HttpStatus.BAD_REQUEST), 

    OVERVIEW_PART_NOT_FOUND(4001, "Kh√¥ng t√¨m th·∫•y Overview Part", HttpStatus.NOT_FOUND),
    EXAM_NOT_FOUND(4002, "Kh√¥ng t√¨m th·∫•y b√†i ki·ªÉm tra", HttpStatus.NOT_FOUND),
    OVERVIEW_NOT_FOUND(4003, "Kh√¥ng t√¨m th·∫•y Overview", HttpStatus.NOT_FOUND),
    SPEAKING_QUESTION_NOT_FOUND(4004, "Kh√¥ng t√¨m th·∫•y Speaking Question", HttpStatus.NOT_FOUND)


    ;


    private int code;
    private String message;
    private HttpStatusCode statusCode;

    ErrorCode(int code, String message, HttpStatusCode statusCode) {
        this.code = code;
        this.message = message;
        this.statusCode = statusCode;
    }

    /**
     * L·∫•y chu·ªói message ƒë√£ ƒë∆∞·ª£c ƒë·ªãnh d·∫°ng.
     * @param args C√°c gi√° tr·ªã c·∫ßn truy·ªÅn v√†o placeholder (v√≠ d·ª•: {0}, {1}, ...)
     * @return Chu·ªói message ho√†n ch·ªânh
     */
    public String getMessage(Object... args) {
        return MessageFormat.format(this.message, args);
    }

    // B·∫°n c≈©ng c√≥ th·ªÉ th√™m m·ªôt getter cho message g·ªëc n·∫øu c·∫ßn
    public String getMessageTemplate() {
        return message;
    }
}
