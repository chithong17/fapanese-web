import React, { useEffect, useState } from "react";
import {
  getAllStudents,
  registerStudent,
  updateStudent,
  deleteStudent,
} from "../../api/student";

export default function StudentManagementPage() {
  const [students, setStudents] = useState<any[]>([]);
  const [form, setForm] = useState<any | null>(null);
  const token = localStorage.getItem("token") || "";

  // üß© Fetch danh s√°ch sinh vi√™n
  const fetchStudents = async () => {
    try {
      const data = await getAllStudents(token);
      setStudents(Array.isArray(data) ? data : []);
    } catch (err) {
      console.error("‚ùå L·ªói khi t·∫£i danh s√°ch sinh vi√™n:", err);
      alert("Kh√¥ng th·ªÉ t·∫£i danh s√°ch sinh vi√™n. Ki·ªÉm tra token ho·∫∑c quy·ªÅn truy c·∫≠p.");
    }
  };

  useEffect(() => {
    fetchStudents();
  }, []);

  // üóë X√≥a sinh vi√™n
  const handleDelete = async (email: string) => {
    if (window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a h·ªçc sinh n√†y?")) {
      try {
        await deleteStudent(email, token);
        fetchStudents();
      } catch (err) {
        console.error("‚ùå L·ªói khi x√≥a sinh vi√™n:", err);
        alert("Kh√¥ng th·ªÉ x√≥a. C√≥ th·ªÉ b·∫°n kh√¥ng c√≥ quy·ªÅn ADMIN.");
      }
    }
  };

  // üíæ L∆∞u sinh vi√™n (t·∫°o m·ªõi ho·∫∑c c·∫≠p nh·∫≠t)
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      console.log("üì§ D·ªØ li·ªáu g·ª≠i ƒëi:", form);
      if (form.email && students.some((s) => s.email === form.email)) {
        await updateStudent(form.email, form, token);
      } else {
        await registerStudent(form, token);
      }
      setForm(null);
      fetchStudents();
    } catch (err) {
      console.error("‚ùå L·ªói khi l∆∞u sinh vi√™n:", err);
      alert("Kh√¥ng th·ªÉ l∆∞u sinh vi√™n. Ki·ªÉm tra d·ªØ li·ªáu nh·∫≠p ho·∫∑c quy·ªÅn truy c·∫≠p.");
    }
  };

  return (
    <div className="p-6 bg-gray-50 min-h-screen">
      <h2 className="text-2xl font-bold mb-4">üë©‚Äçüéì Qu·∫£n l√Ω h·ªçc sinh</h2>

      {/* N√∫t th√™m h·ªçc sinh */}
      <button
        onClick={() =>
          setForm({
            firstName: "",
            lastName: "",
            email: "",
            campus: "",
            dateOfBirth: "",
          })
        }
        className="bg-blue-600 text-white px-4 py-2 rounded mb-4 hover:bg-blue-700"
      >
        + Th√™m h·ªçc sinh
      </button>

      {/* Form th√™m / s·ª≠a */}
      {form && (
        <form
          onSubmit={handleSubmit}
          className="bg-white p-4 mb-6 shadow rounded-md border border-gray-200"
        >
          <div className="flex gap-2 mb-3">
            <input
              type="text"
              placeholder="H·ªç"
              className="border p-2 flex-1 rounded"
              value={form.firstName}
              onChange={(e) => setForm({ ...form, firstName: e.target.value })}
              required
            />
            <input
              type="text"
              placeholder="T√™n"
              className="border p-2 flex-1 rounded"
              value={form.lastName}
              onChange={(e) => setForm({ ...form, lastName: e.target.value })}
              required
            />
          </div>

          <div className="flex gap-2 mb-3">
            <input
              type="email"
              placeholder="Email"
              className="border p-2 flex-1 rounded"
              value={form.email}
              onChange={(e) => setForm({ ...form, email: e.target.value })}
              required
              disabled={!!students.some((s) => s.email === form.email)} // tr√°nh ƒë·ªïi email khi edit
            />
            <input
              type="text"
              placeholder="Campus"
              className="border p-2 flex-1 rounded"
              value={form.campus}
              onChange={(e) => setForm({ ...form, campus: e.target.value })}
            />
          </div>

          <div className="flex gap-2 mb-3">
            <input
              type="date"
              className="border p-2 flex-1 rounded"
              value={form.dateOfBirth || ""}
              onChange={(e) =>
                setForm({ ...form, dateOfBirth: e.target.value })
              }
            />
          </div>

          <div className="mt-3">
            <button
              type="submit"
              className="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700"
            >
              L∆∞u
            </button>
            <button
              type="button"
              onClick={() => setForm(null)}
              className="ml-3 border px-4 py-2 rounded hover:bg-gray-100"
            >
              H·ªßy
            </button>
          </div>
        </form>
      )}

      {/* B·∫£ng danh s√°ch */}
      <table className="min-w-full border bg-white shadow text-sm">
        <thead className="bg-gray-200 text-left">
          <tr>
            <th className="p-2 border">Email</th>
            <th className="p-2 border">H·ªç t√™n</th>
            <th className="p-2 border">Campus</th>
            <th className="p-2 border text-center">Ng√†y sinh</th>
            <th className="p-2 border text-center">H√†nh ƒë·ªông</th>
          </tr>
        </thead>
        <tbody>
          {students.length > 0 ? (
            students.map((s) => (
              <tr key={s.email} className="border-b hover:bg-gray-50">
                <td className="p-2 border">{s.email}</td>
                <td className="p-2 border">
                  {s.firstName} {s.lastName}
                </td>
                <td className="p-2 border">{s.campus || "-"}</td>
                <td className="p-2 border text-center">
                  {s.dateOfBirth || "-"}
                </td>
                <td className="p-2 border text-center">
                  <button
                    onClick={() => setForm(s)}
                    className="bg-yellow-500 text-white px-3 py-1 rounded mr-2 hover:bg-yellow-600"
                  >
                    S·ª≠a
                  </button>
                  <button
                    onClick={() => handleDelete(s.email)}
                    className="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600"
                  >
                    X√≥a
                  </button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan={5} className="text-center p-4 text-gray-500">
                Kh√¥ng c√≥ h·ªçc sinh n√†o.
              </td>
            </tr>
          )}
        </tbody>
      </table>
    </div>
  );
}
